#+title: Emacs
#+author: Chaise Conn
#+REVEAL_HLEVEL: 1
#+OPTIONS: toc:nil reveal_title_slide:nil reveal_single_file:t
#+REVEAL_THEME: blood
#+REVEAL_TRANS: linear
#+REVEAL_TITLE_SLIDE: <h2>%t</h2><br/>Author: <h4>%a</h4>

#+BEGIN_NOTES
We're going to be talking about Emacs today. I wanted to take this time to help people understand what Emacs is and how it works.

- Once I understood, Emacs took over my computer
  + You don't have to go that far
- This is a discusstion
#+END_NOTES

* My Background
- Started using *Vim* in high school
- I love *keyboard-driven* interfaces
- I love *customizing* my tools
- I started using *Emacs* 1 year ago

#+REVEAL: split

[[./market.png]]

** Why no love for Emacs?
- Never heard of Emacs?
  + Initially released in *1976*
- Think it's just a text editor?
- Tried Emacs before, but couldn't figure it out?
* What is Emacs?

Hint: it's not *just* an editor

#+REVEAL: split

It's a *programmable*, *text-oriented* user-interface

[[file:emacs_structure.png]]

** Emacs is a REPL!
- Configured in *Emacs Lisp*
- Every action is a *function*
  + You can execute functions using keybinds, or by calling them directly
- Every function is *self-documenting*
- Has it's own *package manager*

*** Example

#+begin_src elisp :results none :exports code
(defun projectile-find-readme ()
  "Open the README for the current project"
  (interactive)
  (let ((fpaths (append
                 (file-expand-wildcards (projectile-expand-root "*.org"))
                 (file-expand-wildcards (projectile-expand-root "*.md")))))
    (if (and (not (seq-empty-p fpaths))
             (file-exists-p (car fpaths)))
        (find-file (car fpaths))
      (message "README doesn't exist"))))

(map! :leader "p /" #'projectile-find-readme)
#+end_src
** Emacs is an IDE!
- Versatile key bindings
- Window splits
- Terminal
- Syntax highlighting
- Syntax checking / linting
- Completion
- Project search & tree
- Git interface
- Breakpoint Debugging (/experimental/)

** Emacs is an OS!
- File browser
  + PDF reader
  + Image viewer
- Email client
- Personal agenda
- RSS feed reader
- Personal finance
- Literate programming
- Tiling window manager
* Why Emacs?
Customization
* Getting Started

1. Install emacs
2. Configure your =init.el=

#+REVEAL: split

[[./emacs_resized.png]]

** Configuration Frameworks
- Spacemacs
- [[file:~/.config/doom/init.el][Doom emacs]]

#+REVEAL: split

[[./doom_resized.png]]

*** Show Configs!

** Tips
- It helps to already be familiar with *Vim*
- Keep the manual handy

* Conclusion
- Emacs is not *just* a text editor
- Emacs deserves more love
- I'm happy to help anyone get started
